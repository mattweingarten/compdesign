/* 16923229, Simon Rodoni */
/* 17921537, Matthew Weingarten */

int min3 (int i1, int i2, int i3) {
    var res = i1;
    if (i2 < res) { res = i2; }
    if (i3 < res) { res = i3; }
    return res;
}

int levenshtein (string s1, string s2) {
    var l1 = length_of_string(s1);
    var l2 = length_of_string(s2);
    var res = 0;
    if (l1 == 0) { res = l2; }
    else if (l2 == 0) { res = l1; }
    else {
        var s1_arr = array_of_string(s1);
        var s2_arr = array_of_string(s2);
        var dp = new int[][l1+1];

        for (var i = 0; i <= l1; i = i + 1;) {
            dp[i] = new int[l2+1];
        }

        for (var i = 0; i <= l1; i = i + 1;) {
            dp[i][0] = i;
        }

        for (var j = 1; j <= l2; j = j + 1;) {
            dp[0][j] = j;
        }

        for (var i = 1; i <= l1; i = i + 1;) {
            for (var j = 1; j <= l2; j = j + 1;) {
                if (s1_arr[i-1] == s2_arr[j-1]) { dp[i][j] = dp[i-1][j-1]; }
                else { dp[i][j] = 1 + min3(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]); }
            }
        }
        res = dp[l1][l2];
    }
    return res;
}

int levenshtein_rec (string str1, string str2, int i, int j) {
    var s1 = array_of_string(str1);
    var s2 = array_of_string(str2);
    if (i == 0) { return j; }
    else if (j == 0) { return i; }
    else {
        if (s1[i-1] == s2[j-1]) { return levenshtein_rec(str1, str2, i-1, j-1); }
        else {
            return 1 + min3(levenshtein_rec(str1, str2, i-1, j), levenshtein_rec(str1, str2, i, j-1), levenshtein_rec(str1, str2, i-1, j-1));
        }
    }
    return -1;
}

int program(int argc, string[] argv) {
    var strs = new string[]{
        "text",
        "test",
        "",
        "book",
        "back",
        "mechanics",
        "machine"
    };
    var i = 0;
    var j = 1;
    /*print_int(levenshtein_rec(strs[i], strs[j], length_of_string(strs[i]), length_of_string(strs[j])));
    i = 0;
    j = 2;
    print_int(levenshtein_rec(strs[i], strs[j], length_of_string(strs[i]), length_of_string(strs[j])));
    i = 2;
    j = 1;
    print_int(levenshtein_rec(strs[i], strs[j], length_of_string(strs[i]), length_of_string(strs[j])));*/
    print_int(levenshtein(strs[0], strs[1]));
    print_int(levenshtein(strs[0], strs[2]));
    print_int(levenshtein(strs[2], strs[1]));
    print_int(levenshtein(strs[3], strs[4]));
    print_int(levenshtein(strs[5], strs[6]));
    print_int(levenshtein(strs[6], strs[6]));
    return 0;
}
